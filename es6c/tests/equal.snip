(println (= 1 1))
(println (= 1 2))
;; EXPECTED: false
(println (= 1 "1"))
;; EXPECTED: false

(println (= "abc" "abc"))
;; EXPECTED: true
(println (= "abc" "abcd"))
;; EXPECTED: false
(println (= "abc" "abd"))
;; EXPECTED: false
(println (= 'abc "abc"))
;; EXPECTED: false
(println (= :abc "abc"))
;; EXPECTED: false
(println (= 'abc 'abc))
;; EXPECTED: true
(println (= :abc :abc))
;; EXPECTED: true

(println (= (list) (list)))
;; EXPECTED: true
(println (= (list 1 2) (list 1 2)))
;; EXPECTED: true
(println (= (list 1) (list)))
;; EXPECTED: false
(println (= (list) (list 1)))
;; EXPECTED: false
(println (= 0 (list)))
;; EXPECTED: false
(println (= (list) 0))
;; EXPECTED: false
(println (= (list) ""))
;; EXPECTED: false
(println (= "" (list)))
;; EXPECTED: false

;; Testing vector equality
(println (= [] (list)))
;; EXPECTED: true
(println (= [7 8] [7 8]))
;; EXPECTED: true
(println (= (list 1 2) [1 2]))
;; EXPECTED: true
(println (= (list 1) []))
;; EXPECTED: false
(println (= [] [1]))
;; EXPECTED: false
(println (= 0 []))
;; EXPECTED: false
(println (= [] 0))
;; EXPECTED: false
(println (= [] ""))
;; EXPECTED: false
(println (= "" []))
;; EXPECTED: false

;; Nested vector/list equality
(println (= [(list)] (list [])))
;; EXPECTED: true
(println (= [1 2 (list 3 4 [5 6])] (list 1 2 [3 4 (list 5 6)])))
;; EXPECTED: true

;; Hash-map equality

